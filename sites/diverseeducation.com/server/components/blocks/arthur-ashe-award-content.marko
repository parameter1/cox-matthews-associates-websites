import { getAsArray } from "@mindful-web/object-path";
import profilesFragment from "../../graphql/fragments/arthur-ashe-profile";
import sectionWithChilderenFragment from "../../graphql/fragments/section-with-children";

$ const { alias } = input;

<marko-web-query|{ node }|
  name="website-section"
  params={ alias, queryFragment: sectionWithChilderenFragment }
>
  $ const awards = getAsArray(node, "children.edges").map(({ node }) => node);
  $ const awardsAppropriatelyOrdered = awards.reduce((array, award) => {
    const innerArray = array;
    if (award.name.match("Male Winner")) {
      innerArray[0] = award;
    } else if (award.name.match("Female Winner")) {
      innerArray[1] = award;
    } else if (award.name.match("Male Finalists")) {
      innerArray[2] = award;
    } else if (award.name.match("Female Finalists")) {
      innerArray[3] = award;
    } else if (award.name.match("Male Semi-Finalists")) {
      innerArray[4] = award;
    } else if (award.name.match("Female Semi-Finalists")) {
      innerArray[5] = award;
    }
    return innerArray;
  }, []).filter((v) => v);
  <div class="row">
    <for|award| of=awardsAppropriatelyOrdered>
      <marko-web-query|{ nodes }|
        name="website-scheduled-content"
        params={
          limit: 25,
          sectionAlias: award.alias,
          sectionBubbling: false,
          queryFragment: profilesFragment,
        }
      >
        <div class="col-md-6">
          <h2 title=award.name class="page-wrapper__website-section-name page-wrapper__website-section-name--secondary">
            ${award.name}
          </h2>
          <theme-card-deck-flow
            cols=1
            nodes=nodes
            modifiers=["awards-honors", "arthur-ashe"]>
            <@slot|{ node }|>
              <site-arthur-ashe-profiles-node node=node with-teaser=true />
            </@slot>
          </theme-card-deck-flow>
        </div>
      </marko-web-query>
    </for>
  </div>
</marko-web-query>
