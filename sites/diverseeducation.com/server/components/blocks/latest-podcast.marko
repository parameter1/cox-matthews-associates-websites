import queryFragment from '@cox-matthews-associates/package-global/graphql/fragments/content-page';
import sectionFragment from "@mindful-web/marko-web-theme-monorail/graphql/fragments/section-info";
import defaultValue from "@mindful-web/marko-core/utils/default-value";


$ const queryParams = {
  sectionAlias: "podcasts",
  includeContentTypes: ["Podcast"],
  limit: 1,
  queryFragment,
  sectionFragment,
};

$ const { site, i18n } = out.global;
$ const podcastLinks = site.getAsArray("podcastLinks");
$ const blockName = "latest-podcast";
$ const withVideo = defaultValue(input.withVideo, false);

<if(withVideo)>
  <marko-web-block name="callout-cards">
    <marko-web-element block-name="callout-cards" name="row" attrs={ "style": "background-color: #f0f1f2;"}>
      <marko-web-query|{ nodes, section }| name="website-scheduled-content" params=queryParams>
        $ const [node] = nodes;
        <marko-web-element block-name="callout-cards" name="col">
        <marko-web-block name=blockName>
          <marko-web-element block-name=blockName name="header">
            <marko-web-icon name="file" modifiers=[blockName] />
            ${section.name}
          </marko-web-element>
          <div style="display: flex">
            <div class="podcast-logo-description-wrapper">
              <marko-web-img
                class="section__logo"
                src="https://img.diverseeducation.com/files/base/diverse/all/image/static/InTheMargins.png"
                srcset=["https://img.diverseeducation.com/files/base/diverse/all/image/static/InTheMargins.png?dpr=2 2x"]
                alt="In The Margins Logo"
                attrs={ width: 150, height: 150 }
              />
            </div>
            <div class="col">
              <marko-web-node
                type=`${node.type}-content`
                card=true
                flush=true
                full-height=false
                modifiers=[blockName]
              >
                <@body>
                  <@header>
                    <@left>
                      ${i18n("Latest Episode")}
                    </@left>
                  </@header>
                  <@text tag="h5" modifiers=["podcast-title"]>
                    <marko-web-content-name tag=null obj=node link=true />
                  </@text>
                </@body>
              </marko-web-node>
            </div>
        </div>
        <marko-web-node
          type=`${node.type}-content`
          card=true
          flush=true
          full-height=false
          modifiers=[blockName]
        >
          <@body>
            <@text modifiers=["more-episodes"]>
              <marko-web-website-section-name|{ value }| tag=null obj=section link=true>
                ${i18n("More episodes")} &raquo;
              </marko-web-website-section-name>
            </@text>
            <if(podcastLinks.length)>
              <@footer>
                <@left modifiers=["buttons"]>
                  <for|link| of=podcastLinks>
                    <marko-web-link
                      class=`btn btn-light ${blockName}__btn`
                      href=link.href
                      title=link.label
                      target="_blank"
                    >
                      ${link.label}
                    </marko-web-link>
                  </for>
                </@left>
              </@footer>
            </if>
          </@body>
        </marko-web-node>
        </marko-web-block>
        </marko-web-element>
      </marko-web-query>
      <marko-web-element block-name="callout-cards" name="col" modifiers=["last"]>
      <marko-web-block name=blockName>
        <marko-web-query|{ nodes }|
        name="website-scheduled-content"
        params={
          sectionAlias: "videos",
          limit: 1,
          includeContentTypes: ['Video'],
          queryFragment
        }
        >
          <if(nodes[0].embedCode)>
            $ const matches = nodes[0].embedCode.match(/src\=\"(.+?)\"/);
            $ if (matches.length) {
              const [, urlMatch] = matches;
              const urlMatchAsURL = new URL(urlMatch);
              if (!urlMatchAsURL.searchParams.has('mute', '1')) {
                urlMatchAsURL.searchParams.set('mute', '1');
              }
              if (!urlMatchAsURL.searchParams.has('autoplay', '1')) {
                urlMatchAsURL.searchParams.set('autoplay', '1');
              }
              if (!urlMatchAsURL.searchParams.has('rel', '0')) {
                urlMatchAsURL.searchParams.set('rel', '0');
              }
              nodes[0].embedCode = nodes[0].embedCode.replace(urlMatch, String(urlMatchAsURL));
              nodes[0].embedCode = nodes[0].embedCode.replace(/height=\"[0-9]+\"/, 'height="300"')
            }
            <marko-web-content-embed-code block-name=blockName obj=nodes[0] modifiers=["podcast-video"] />
          </if>
        </marko-web-query>
        </marko-web-block>
      </marko-web-element>
    </marko-web-element>
  </marko-web-block>
</if>
<else>
  <marko-web-query|{ nodes, section }| name="website-scheduled-content" params=queryParams>
    $ const [node] = nodes;
    <marko-web-block name=blockName>
      <marko-web-element block-name=blockName name="header">
        <marko-web-icon name="file" modifiers=[blockName] />
        ${section.name}
      </marko-web-element>
          <div style="display: flex">
            <div class="podcast-logo-description-wrapper">
              <marko-web-img
                class="section__logo"
                src="https://img.diverseeducation.com/files/base/diverse/all/image/static/InTheMargins.png"
                srcset=["https://img.diverseeducation.com/files/base/diverse/all/image/static/InTheMargins.png?dpr=2 2x"]
                alt="In The Margins Logo"
                attrs={ width: 150, height: 150 }
              />
            </div>
            <div class="col">
              <marko-web-node
                type=`${node.type}-content`
                card=true
                flush=true
                full-height=false
                modifiers=[blockName]
              >
                <@body>
                  <@header>
                    <@left>
                      ${i18n("Latest Episode")}
                    </@left>
                  </@header>
                  <@text tag="h5" modifiers=["podcast-title"]>
                    <marko-web-content-name tag=null obj=node link=true />
                  </@text>
                </@body>
              </marko-web-node>
            </div>
        </div>
        <marko-web-node
          type=`${node.type}-content`
          card=true
          flush=true
          full-height=false
          modifiers=[blockName]
        >
          <@body>
            <@text modifiers=["more-episodes"]>
              <marko-web-website-section-name|{ value }| tag=null obj=section link=true>
                ${i18n("More episodes")} &raquo;
              </marko-web-website-section-name>
            </@text>
            <if(podcastLinks.length)>
              <@footer>
                <@left modifiers=["buttons"]>
                  <for|link| of=podcastLinks>
                    <marko-web-link
                      class=`btn btn-light ${blockName}__btn`
                      href=link.href
                      title=link.label
                      target="_blank"
                    >
                      ${link.label}
                    </marko-web-link>
                  </for>
                </@left>
              </@footer>
            </if>
          </@body>
        </marko-web-node>
    </marko-web-block>
  </marko-web-query>
</else>
